/*
 * Pueda usar esta plantilla para la carga del reto a iMaster
 * Copie las clases de los paquetes Modelo, Vista, Controlador y Util
 * No incluya los import de los archivos .java solo las clases
 */
// Importaciones necesarias en iMaster
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

// Util (No modificar)
class JDBCUtilities {
    private static final String DATABASE_LOCATION = "ProyectosConstruccion.db";

    public static Connection getConnection() throws SQLException {
        String url = "jdbc:sqlite:"+DATABASE_LOCATION;

        return DriverManager.getConnection(url);
    }
}

// Remplace en adelante por las clases de sus archivos .java

// Vista
class VistaRequerimientos {
    public static final ControladorRequerimientos controlador = new ControladorRequerimientos();

    public static void requerimiento1(){
        try {
            ArrayList<Requerimiento_1> req1list= new ArrayList<>();
            req1list= controlador.consultarRequerimiento1();
            for (Requerimiento_1 req1 : req1list) {
                System.out.println(req1.getNombre()+" "+req1.getCargo()+" "+req1.getNumproyectos());
            }

        } catch (Exception e) {
            System.err.println(e);
        }
    }

    public static void requerimiento2(){
        try {
            ArrayList<Requerimiento_2> req2list= new ArrayList<>();
            req2list= controlador.consultarRequerimiento2();
            for (Requerimiento_2 req2 : req2list) {
                System.out.println(req2.getId_matconstruc()+" "+req2.getNommaterial()+" "+req2.getCantidad()+" "+req2.getPrecio_unit()+" "+req2.getPrecio_total());                
            }
        } catch (Exception e) {
            System.err.println(e);
        }
    }

    public static void requerimiento3(){
        try {
            ArrayList<Requerimiento_3> req3list= new ArrayList<>();
            req3list= controlador.consultarRequerimiento3();
            for (Requerimiento_3 req3 : req3list) {
                System.out.println(req3.getId_proyecto()+" "+req3.getCiudad()+" "+req3.getClasificacion()+" "+req3.getCosto_proyecto());
            }

        } catch (Exception e) {
            System.err.println(e);
        }
    }
}

// Controlador
class ControladorRequerimientos {
    private final Requerimiento_1Dao requerimiento_1Dao;
    private final Requerimiento_2Dao requerimiento_2Dao;
    private final Requerimiento_3Dao requerimiento_3Dao;

    public ControladorRequerimientos(){
        this.requerimiento_1Dao= new Requerimiento_1Dao();
        this.requerimiento_2Dao= new Requerimiento_2Dao();
        this.requerimiento_3Dao= new Requerimiento_3Dao();
    }
    
    public ArrayList<Requerimiento_1> consultarRequerimiento1() throws SQLException {
        ArrayList<Requerimiento_1> reqlist1= new ArrayList<>();
        reqlist1= requerimiento_1Dao.requerimiento1();
        return reqlist1;
    }

    public ArrayList<Requerimiento_2> consultarRequerimiento2() throws SQLException {
        return requerimiento_2Dao.requerimiento2();
    }

    public ArrayList<Requerimiento_3> consultarRequerimiento3() throws SQLException {
        ArrayList<Requerimiento_3> reqlist3= new ArrayList<>();
        reqlist3= requerimiento_3Dao.requerimiento3();
        return reqlist3;
    }
}

// Modelo
// VO
class Requerimiento_1 {
    private String nombre;
    private String cargo;
    private int numproyectos;

    public Requerimiento_1(){
        
    }

    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public String getCargo() {
        return cargo;
    }

    public void setCargo(String cargo) {
        this.cargo = cargo;
    }

    public int getNumproyectos() {
        return numproyectos;
    }

    public void setNumproyectos(int numproyectos) {
        this.numproyectos = numproyectos;
    }

}

class Requerimiento_2 {
    private int id_matconstruc;
    private String nommaterial;
    private int cantidad;
    private int precio_unit;
    private int precio_total;

    public Requerimiento_2(){

    }

    public int getId_matconstruc() {
        return id_matconstruc;
    }

    public void setId_matconstruc(int id_matconstruc) {
        this.id_matconstruc = id_matconstruc;
    }

    public String getNommaterial() {
        return nommaterial;
    }

    public void setNommaterial(String nommaterial) {
        this.nommaterial = nommaterial;
    }

    public int getCantidad() {
        return cantidad;
    }

    public void setCantidad(int cantidad) {
        this.cantidad = cantidad;
    }

    public int getPrecio_unit() {
        return precio_unit;
    }

    public void setPrecio_unit(int precio_unit) {
        this.precio_unit = precio_unit;
    }

    public int getPrecio_total() {
        return precio_total;
    }

    public void setPrecio_total(int precio_total) {
        this.precio_total = precio_total;
    }

    

}

class Requerimiento_3 {
    private int id_proyecto;
    private String ciudad;
    private String clasificacion;
    private int costo_proyecto; 
    
    public Requerimiento_3(){

    }

    public int getId_proyecto() {
        return id_proyecto;
    }

    public void setId_proyecto(int id_proyecto) {
        this.id_proyecto = id_proyecto;
    }

    public String getCiudad() {
        return ciudad;
    }

    public void setCiudad(String ciudad) {
        this.ciudad = ciudad;
    }

    public String getClasificacion() {
        return clasificacion;
    }

    public void setClasificacion(String clasificacion) {
        this.clasificacion = clasificacion;
    }

    public int getCosto_proyecto() {
        return costo_proyecto;
    }

    public void setCosto_proyecto(int costo_proyecto) {
        this.costo_proyecto = costo_proyecto;
    }

  
}

// DAO
class Requerimiento_1Dao {
    public ArrayList<Requerimiento_1> requerimiento1() throws SQLException {
        String sql = "SELECT Nombre||' '||Primer_Apellido AS Lider, Cargo, COUNT(*) AS '# Proyectos'FROM Lider l JOIN Proyecto p ON l.ID_Lider = p.ID_Lider WHERE p.Constructora LIKE 'Pegaso' GROUP BY l.ID_Lider ORDER BY Cargo, Lider;";
        try (
            Connection conn = JDBCUtilities.getConnection();
            Statement stms= conn.createStatement();
        ) {
            ResultSet rs = stms.executeQuery(sql);
            ArrayList<Requerimiento_1> req1list= new ArrayList<>();

            while (rs.next()){
                Requerimiento_1 req1= new Requerimiento_1();
                req1.setNombre(rs.getString("Lider"));
                req1.setCargo(rs.getString("Cargo"));
                req1.setNumproyectos(rs.getInt("# Proyectos"));
                req1list.add(req1);
            }

            return req1list;

            
        }
    }
}

class Requerimiento_2Dao {
    public ArrayList<Requerimiento_2> requerimiento2() throws SQLException {
        String sql = "SELECT c.ID_MaterialConstruccion, mc.Nombre_Material, c.Cantidad, mc.Precio_Unidad, Cantidad*mc.Precio_Unidad AS Precio_Total FROM Compra c JOIN MaterialConstruccion mc ON c.ID_MaterialConstruccion = mc.ID_MaterialConstruccion WHERE ID_Proyecto IN (14, 20, 18, 36, 45, 48, 56) ORDER BY ID_Proyecto ASC, mc.Precio_Unidad DESC;"; 

        try (
            Connection conn= JDBCUtilities.getConnection();
            Statement stms= conn.createStatement();
        ) {
            ResultSet rs = stms.executeQuery(sql);
            ArrayList<Requerimiento_2> req2list= new ArrayList<>();

            while(rs.next()){
                Requerimiento_2 req2 = new Requerimiento_2();
                req2.setId_matconstruc(rs.getInt("ID_MaterialConstruccion"));
                req2.setNommaterial(rs.getString("Nombre_Material"));
                req2.setCantidad(rs.getInt("Cantidad"));
                req2.setPrecio_unit(rs.getInt("Precio_Unidad"));
                req2.setPrecio_total(rs.getInt("Precio_Total"));

                req2list.add(req2);
            }

            return req2list;
        }
    }
}

class Requerimiento_3Dao {
    public ArrayList<Requerimiento_3> requerimiento3() throws SQLException {
        String sql= "WITH preciosproyectos AS(SELECT ID_Proyecto, Cantidad*mc.Precio_Unidad AS Precio_Total FROM Compra c JOIN MaterialConstruccion mc ON c.ID_MaterialConstruccion = mc.ID_MaterialConstruccion) SELECT ID_Proyecto, Ciudad, Clasificacion, SUM(Precio_Total) AS Costo_Proyecto FROM preciosproyectos pp NATURAL JOIN Proyecto p WHERE Ciudad LIKE 'Pereira' OR Ciudad LIKE 'Sta. Rosa de Cabal' GROUP BY p.ID_Proyecto HAVING Costo_Proyecto > 87000 ORDER BY Ciudad, Clasificacion;";

        try (
            Connection conn = JDBCUtilities.getConnection();
            Statement stms= conn.createStatement();
        ) {
            ResultSet rs= stms.executeQuery(sql);
            ArrayList<Requerimiento_3> req3list= new ArrayList<>();


            while(rs.next())
            {   
                Requerimiento_3 req3= new Requerimiento_3();
                req3.setId_proyecto(rs.getInt("ID_Proyecto")); 
                req3.setCiudad(rs.getString("Ciudad"));
                req3.setClasificacion(rs.getString("Clasificacion"));
                req3.setCosto_proyecto(rs.getInt("Costo_Proyecto"));

                req3list.add(req3);
            }

            return req3list;
            
        } 

    }
}